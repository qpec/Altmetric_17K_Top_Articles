 of resilience. It is not. Precariousness
describes how far a system state is from
a tipping point, past which it could not
recover. This could be measured as a sim-
ple Euclidean distance (in our simple bivari-
ate space, as the distance from disturbed
state to tipping point), or could be mea-
sured in terms of the magnitude of extra
disturbance required to push the disturbed
state past the tipping point (this requires
reference to the relationship between sys-
tem state and disturbance magnitude).
Furthermore, we wonder whether precari-
ousness actually is, and should be, the
most important component of resilience?
In our own review of recent literature on
ecological resilience we found very few
examples of the measurement of precari-
ousness or latitude, perhaps because tip-
ping points are hard to measure. Tipping
points and precariousness imply a rather
binary, good/bad view of disturbed bio-
logical systems, which makes sense when
systems 
are 
poorly 
understood, 
but
should become much more nuanced
when systems are measured and mod-
elled well [5]. Y&R themselves note that
‘critical slowing down’ can happen, sug-
gesting that behaviour near tipping points
is linked not only to resistance but also to
rates (and probabilities) of recovery. Criti-
cal speeding up also seems possible for
very repellent tipping points, even if they
can 
be 
crossed 
easily 
by 
large
disturbances.
Non-Equilibrium Dynamics Are
Complicated
Y&R point out correctly that insults to bio-
logical systems can occur as sudden pulse
events (e.g., hurricanes), as ramped change
(e.g., invasion by exotic species; climate
change), or as chronic change (e.g., con-
stant harvesting regime), and that systems
will respond differently to different types of
insult. This raises another important seman-
tic issue. In our own work on demography
we distinguish between demographic dis-
turbances (sudden events, followed by nor-
mal 
processes) 
and 
demographic
perturbations 
(chronic 
changes 
to
demographic processes) [6]. This follows
the standard definition of disturbance as
an event (usually singular) that causes a
temporary period of environmental stress
that upsets the normal state that a system
is in. If the exogenous event is chronic, then
the system processes have changed per-
manently, and the previously ‘normal’ state
can only be returned to via a process of
adaptation. We suggest that such chronic
insults should be called perturbations or,
simply, change. In a scenario of change,
different measures of system response
are required, and might be called ‘robust-
ness’ and ‘adaptation’ rather than ‘resis-
tance’ and ‘recovery’.
Y&R also point out that disturbances have
histories, and that states are rarely at equi-
librium. This echoes our point that studies
of resilience should recognise the ampli-
tude, structure, and frequency of distur-
bances. 
The 
idea 
that 
impacts 
of
disturbance might depend on initial system
state is known as hysteresis [7]. Hysteresis
is well known in ecological systems, partic-
ularly coral reefs [8], and is captured by the
nonlinear resistance and recovery curves in
our bivariate representation of resilience.
Y&R suggest that disturbance itself is
enough to completely change the resis-
tance landscape of a biological system.
This implies a very interesting feedback
loop between disturbance and resilience,
mediated by the adaptive dynamics of the
system [9], which might complicate, but not
deny, our bivariate approach.
Studying Resilience Case-by-
Case?
Y&R end their response by recommending
that various measures of resilience can and
should be tailored to the individual systems
and questions being studied, while ‘future’
efforts should aim to find the smaller set of
metrics required for resilience manage-
ment. The problem we have with this
approach is that the study of resilience in
ecology and evolution already suffers from
confusing terms, metrics, and definitions.
Our goal was to encourage a standard
approach such that understanding could
be gained not only from individual systems
but also from comparisons of resilience
among systems. The study of resilience
is no longer in its infancy, and there seems
no better time to agree on a standard tool-
box for measuring and modelling it. The
bivariate approach that we suggested
might not be ‘it’, but we would like to see
the (currently precarious) study of resilience
traverse its own tipping point towards a
stable attractor of standardised empirical
and theoretical research.
1Centre for Ecology and Conservation, University of
Exeter, Penryn Campus, Penryn, Cornwall, TR10 9FE, UK
*Correspondence: d.j.hodgson@exeter.ac.uk (D. Hodgson).
http://dx.doi.org/10.1016/j.tree.2015.11.003
References
1. Hodgson, D. et al. (2015) What do you mean, ‘resilient’?
Trends Ecol. Evol. 30, 503–506
2. Yeung, A.C.Y. and Richardson, J.S. (2016) Some concep-
tual and operational considerations when measuring ‘resil-
ience’: a response to Hodgson et al. Trends Ecol. Evol. 31,
2–3
3. Gunderson, L.H. (2000) Ecological resilience – in theory and
application. Annu. Rev. Ecol. Syst. 43, 425–439
4. Holling, C.S. (1996) Engineering resilience versus ecological
resilience. In Engineering within Ecological Constraints
(Schulze, P.C., ed.), pp. 31–44, National Academies Press
5. Capon, S.J. et al. (2015) Regime shifts, thresholds and
multiple stable states in freshwater ecosystems; a critical
appraisal of the evidence. Sci. Total Environ. 534, 122–130
6. Stott, I. et al. (2012) Beyond sensitivity: nonlinear perturba-
tion analysis of transient dynamics. Methods Ecol. Evol. 3,
673–684
7. Beisner, B.E. et al. (2003) Alternative stable states in ecology.
Front. Ecol. Environ. 1, 376–382
8. Mumby, P.J. et al. (2007) Thresholds and the resilience of
Caribbean coral reefs. Nature 450, 98–101
9. Cole, L.E. et al. (2014) Recovery and resilience of tropical
forests after disturbance. Nat. Commun. 5, 3906
Scientific Life
Elevating The Status
of Code in Ecology
K.A.S. Mislan,1,2,*
Jeffrey M. Heer,3 and
Ethan P. White4,5
Code is increasingly central to eco-
logical research but often remains
unpublished and insufficiently rec-
ognized. Making code available
4 
Trends in Ecology & Evolution, January 2016, Vol. 31, No. 1
 allows analyses to be more easily
reproduced 
and 
can 
facilitate
research by other scientists. We
evaluate journal handling of code,
discuss barriers to its publication,
and suggest approaches for pro-
moting and archiving code.
The Role of Code in Ecological
Research
Most ecologists now commonly write
code as part of their laboratory, field, or
modeling research. The transition to a
greater reliance on code has been driven
by increases in the quantity and types of
data used in ecological studies, alongside
improvements in computing power and
software [1]. Code is written in program-
ming languages such as R and Python,
and is used by ecologists for a wide variety
of tasks including manipulating, analyzing,
and graphing data. A benefit of this tran-
sition to code-based analyses is that code
provides a precise record of what has
been done, making it easy to reproduce,
adapt, and expand existing analyses.
Scientific code can be separated into two
general categories – analysis code and sci-
entific software. Analysis code is code that
is used to correct errors in data, simulate
model results, conduct statistical analyses,
and create figures [2]. Release of analysis
code is necessary for the results of a study
to be reproducible [2]. The majority of code
written for ecological studies is analysis
code, and making this code available is
valuable even if it is rough because it docu-
ments precisely what analyses have been
conducted [2–4]. Scientific software is
more general and is designed to be used
in many different projects (e.g., R and
Python packages). The development of
ecological software is becoming more
common and software is increasingly rec-
ognized as a research product [5,6].
Current Standards for Code in
Ecology
Journals are the primary method that ecol-
ogists use to communicate results of
studies. Therefore, the way journals han-
dle code is important for evaluating the
current status of code in ecology. To
explore the current status of code in ecol-
ogy 
journals, 
we 
identified 
journals
through a search of the Journal Citation
Reports (JCR) using the following search
terms: ‘Ecology’ for category, ‘2013’ for
year, ‘SCIE’ (Science Citation Index) and
‘SSCI’ (Social Sciences Citation Index) for
editions checked, and ‘Web of Science’
for the category schema. We selected the
top 100 results for analysis and, after
excluding museum bulletins, a book,
and a journal with broken website links,
evaluated a total of 96 journals. We
searched the author guidelines for each
journal to determine if there was any men-
tion of code or software in the context of
scientific research. We also conducted
more specific searches to determine if
journals had a section for documentation
of scientific software releases, and if jour-
nals had a policy requiring the release of
code and/or data for article publication.
Data release policies provide a useful
comparison 
to 
code 
release 
policies
because there have been ongoing efforts
to encourage or require the release of data
once results are published (e.g., [7]).
As of June 1, 2015, more than 75% of
ecology journals do not mention scientific
code in the author guidelines (Figure 1). Of
the journals that mention scientific code,
only 14% require code to be made avail-
able. Nearly threefold more journals (38%)
require data to be made available. A very
small subset of journals (7%) have created
a special section for software releases or
have added software releases to a list
of options for existing methods sections
(Figure 1). These findings are similar to a
recent analysis of journal code policies in
other scientific fields [8].
Barriers to Publishing Code in
Ecology
Elevating the status of code in ecology will
require changes in attitude and policy by
both journals and researchers. Research-
ers are often concerned about making
their code public for a variety of reasons
[4,9]. One of the main concerns is that
publishing code takes time and research-
ers do not receive sufficient credit to justify
this effort. This is compounded by con-
cerns that releasing code may increase
the risk of being scooped or hinder the
researcher's (or their institution's) ability to
commercialize the software [9]. In ecol-
ogy, we believe that the benefits of pub-
lishing code outweigh the potential risks.
There is little potential for commercializa-
tion of ecological analysis code, or even
software, and reuse of code by others will
raise the impact of the publications by the
author of the code. It is also common for
Trends
Code is frequently written for ecological studies.
Most ecology journals do not address code or
software.
Journals can promote release of code by changing
article formats and requirements.
Code archives should provide a license and be
long-term and citable.
No
No
No
No
Yes
Yes
Yes
Y
Percent (%) as of June 1, 2015
(n = 96 journals)
Crea�on of code men�oned at least once
in ‘Author instruc�ons’?
Journal has a sec�on for
 documenta�on of so�ware releases?
Code release required by journal
for ar�cle publica�on?
Data release required by journal
for ar�cle publica�on?
0
20
40
60
80
 
100
Figure 1. Current Status of Code in Ecology
Journals. Most ecology journals do not have require-
ments or guidelines (as of June 1, 2015) for making code
and data available. Ecology journals listed in the Journal
Citation Reports (JCR) in 2013 were evaluated. Data
and code available at http://dx.doi.org/10.5281/
zenodo.34689.
Trends in Ecology & Evolution, January 2016, Vol. 31, No. 1 
5
 scientists to believe that their code is not
useful and that the description of what
their code does (typically in the methods
section of a journal article) is sufficient
to allow the analysis to be reproduced.
However, computational and statistical
methods have become increasingly com-
plicated, and access to the analysis code
is now crucial to understanding precisely
how analyses were conducted [2,4,9].
Even code that is rough and difficult to
run on other systems (owing to software
dependencies and differences in comput-
ing platforms) still provides valuable infor-
mation as part of detailed documentation
of the analyses [2,4,9]. Given the relatively
low risk and potentially large benefit to
science of releasing code, sufficient incen-
tives are needed to motivate scientists to
take the time to do so.
Promoting Code in Ecology
Journals can promote the release of code
used in ecological studies by increasing
the visibility and discoverability of code
and software. One way to increase visibil-
ity is to indicate code availability in the
table of contents of all formats of the jour-
nal and provide direct links from the online
table of contents to the code (Figure 2A).
In the article, links to code prominently
displayed on the first page will also
increase visibility (Figure 2B). This article
format for data has already been adopted
by some ecology journals, including The
American Naturalist. In addition, journals
can require and verify that code is made
available at the time an article is submitted
for review or is accepted for publication
[10]. Requirements by journals for data to
be made available have been very suc-
cessful [3]. Specialized software sections
in journals go a step further in promoting
highly refined code that can be used
broadly for ecological analyses and visu-
alization, 
and 
provide 
an 
associated
publication [11]. Communicating the avail-
ability of software in a well-described jour-
nal format to the ecology community
highlights software as a product of eco-
logical research. Discoverability can be
enhanced if searchable databases for
articles (e.g., journal archives, Web of Sci-
ence, and PubMed) include an option for
searching for articles with code. This
search capability would make it more fea-
sible to find, compare, and adapt code
from multiple research articles for a new
study. To increase the value of code
releases within the existing academic
incentive structure, papers and other sci-
entific products that use publicly-avail-
able code need to cite the code and
associated publication (if there is one).
Journals should encourage or require
the citing of code, and provide instruc-
tions and examples for how to do so in the
author 
instructions. 
Citing 
code 
will
increase the impact of journal articles
which include code, and provide credit
to ecologists developing valuable soft-
ware resources.
It is also important to consider how best to
make ecological code publicly available.
Ecologists may not be aware of the steps
needed to archive code or the ease of doing
so with available resources [3,12,13].
Table 1 compares some of the common
resources available for archiving code. A
license, which states the conditions under
which the code can be used, should be
included with a submission to an archive. If
a submission does not include a license,
then no one will be able to use the code.
Most of the resources in Table 1 provide a
Month
  20xx  
 
Volume xx, Number x  pp. xxx–xxx
435 
Interes�ng ar�cle about complexity of
biology: a response to Author 
436 
Interes�ng ar�cle about reproduc�on – 
a reply to Author 
Scien�st A. Name
Le�er W. Writer
Le�ers
477 
Ar�cle about animals and plants
487 
A ground-breaking ar�cle in the fields of
ecology and evolu�on
Author O. Ar�cle 
Chromista A. Fungi, Protozoa B. Plantae,
Revi
 ews
and Animalia C. Bacteria
Source code available
Data available
Clickable links to archives
Availability of code indicated in the table of contents 
in html, pdf, and print versions of the journal.
D
S
D
S
S
D
S
(A)
A ground-breaking ar�cle in the fields of
ecology and evolu�on
Review
Prominently displayed,
clickable, and permanent 
links to archives. 
(B)
Chromista A.
 
 Fungi1,2, Protozoa
 
 B.
  Plantae3, and
 
 Animalia
  C.
  Bacteria2
Data archive: h�p://dx.doi.org/10.5061/dryad.xxxxx
Source code archive: h�p://dx.doi.org/10.5281/zenodo.xxxxx  
S
D
Figure 2. Recommended Journal Page Layouts. (A) For the table of contents of a journal. (B) For the first
page of a journal article. The recommendations are for all formats of the journal including html, pdf, and print
versions. An important feature is that active links can be clicked in electronic versions to directly access the
code. The article titles and author names were made-up for the examples.
6 
Trends in Ecology & Evolution, January 2016, Vol. 31, No. 1
 license or license options, making it easy to
add a license when code is submitted.
Archives need to be long-term, assuring
continuous availability ([14], https://
caseybergman.wordpress.com/2012/11/
08/on-the-preservation-of-published-
bioinformatics-code-on-github/). All of the
resources in Table 1 store submissions for
the long-term except for GitHub and Bit-
bucket. Some of the archives assign code
submissions a digital object identifier (DOI),
which makes code straightforward to cite in
scientific publications. Other consider-
ations are whether it is possible to search
specifically for code within the archive, the
process for uploading code, and the cost
of archiving code. Most of the archives
host code for free if the code is made
publicly available. Overall, Zenodo, Fig-
share, Dryad, and PANGAEA are good
options for archiving because they provide
licenses, are long-term, and are easily cit-
able (Table 1).
Journals can have a significant impact on
increasing the value of code within the
ecology community. We believe that
broad adoption of the suggestions to
increase visibility and discoverability of
code, require archiving of code, and
increase citation incentives for doing so,
will motivate more authors to release both
analysis code and scientific software. By
fostering reproducibility and reuse, more
available code can improve the quality
and accelerate the rate of research in
ecology.
Acknowledgments
K.A.S. was supported by the Washington Research
Foundation Fund for Innovation in Data-Intensive Dis-
covery and the Moore/Sloan Data Science Environ-
ments Project at the University of Washington. This
work was supported in part by the Gordon and Betty
Moore Foundation Data-Driven Discovery Initiative
(grants GBMF4553 to J.M.H. and GBMF4563 to E.
P.W.). We thank Carl Boettiger for thoughtful com-
ments that significantly improved the paper.
1School of Oceanography, University of Washington, 1503
NE Boat Street, Seattle, WA 98105, USA
2eScience Institute, University of Washington, 3910 15th
Avenue NE, Seattle, WA 98195, USA
3Computer Science and Engineering Department,
University of Washington, 185 Stevens Way, Seattle, WA
98195, USA
4Department of Wildlife Ecology and Conservation,
University of Florida, 110 Newins-Ziegler Hall, Gainesville,
FL 32611, USA
5Informatics Institute, University of Florida, 230 Newell Dr
Griffon-Floyd Hall, Gainesville, FL 32611, USA
*Correspondence: kas.mislan@gmail.com (K.A.S. Mislan).
http://dx.doi.org/10.1016/j.tree.2015.11.006
References
1. 
Hampton, S.E. et al. (2013) Big data and the future of
ecology. Front. Ecol. Environ. 11, 156–162
2. 
Peng, R.D. (2011) Reproducible research in computational
science. Science 334, 1226–1227
3. 
Hampton, S.E. et al. (2015) The Tao of open science for
ecology. Ecosphere 6, 120
4. 
Barnes, N. (2010) Publish your computer code: it is good
enough. Nature 467, 753
5. 
Rubenstein, M.A. (2012) Dear Colleague Letter – Issuance
of a New NSF Proposal & Award Policies and Procedures
Guide, National Science Foundation www.nsf.gov/pubs/
2013/nsf13004/nsf13004.jsp
6. 
Poisot, T. (2015) Best publishing practices to improve user
confidence in scientific software. Ideas Ecol. Evol. 8, 50–54
7. 
Whitlock, M.C. et al. (2010) Data archiving. Am. Nat. 175,
145–146
8. 
Stodden, V. et al. (2013) Toward reproducible computa-
tional research: an empirical analysis of data and code
policy adoption by journals. PLoS ONE 8, e67111
9. 
Ince, D.C. et al. (2012) The case for open computer pro-
grams. Nature 482, 485–488
10. Nosek, B.A. et al. (2015) Promoting an open research
culture. Science 348, 1422–1425
11. Pettersson, L.B. and Rahbek, C. (2008) Editorial: launching
Software Notes. Ecography 31, 3
12. Stodden, V. and Miguez, S. (2014) Best practices for
computational science: software infrastructure and environ-
ments for reproducible and extensible research. J. Open
Res. Software 2, 1–6
13. Wilson, G. et al. (2014) Best practices for scientific com-
puting. PLoS Biol. 12, e1001745
14. White, E.P. (2015) Some thoughts on best publishing prac-
tices for scientific software. Ideas Ecol. Evol. 8, 55–57
Science & Society
Communication of
Science Advice to
Government
Jeffrey A. Hutchings1,2,3,* and
Nils Chr. Stenseth2,4,5
There are various ways to con-
struct good processes for soliciting
and understanding science. Our
critique of advisory models finds
that a well-supported chief science
advisor (CSA) best ensures the
Table 1. Comparison of Common Resources (Zenodo, Figshare, Dryad Digital Repository, PANGAEA Data Publisher, GitHub, and Bitbucket) Used
for Archiving Code and Dataa
Zenodo 
Figshare 
Dryad 
PANGAEA 
GitHub and Bitbucket 
Supplementary Material
Default License 
Flexible 
MIT 
CC0 
CC-BY 
Flexible 
None
Long-term 
Yesb
Yes b
Yes b
Yes b
No 
Yes b
Assigns DOI 
Yes 
Yes 
Yes 
Yes 
No 
No
Code Search Option 
Yes 
Yes 
No 
No 
Yes 
No
Upload from GitHub 
Yes 
No 
No 
No 
� 
No
Cost to Author 
None 
None 
Possible 
None 
None 
None
aFor the default licenses: flexible means that multiple license options are available from a menu, MIT is the Massachusetts Institute of Technology License, CC0 is the
Creative Commons Zero License, and CC-BY is the Creative Commons Attribution License. DOI, digital object identifier. Zenodo, Figshare, Dryad, and PANGAEA are
good options for archiving because they provide licenses, are long-term, and are citable. The cost to authors assumes that the code is publicly available. Note that the
information in this table is subject to change.
bLong-term availability depends on continued government funding or the success of the companies involved.
Trends in Ecology & Evolution, January 2016, Vol. 31, No. 1 
7
